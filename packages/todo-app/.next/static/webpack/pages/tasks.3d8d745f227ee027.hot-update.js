"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/tasks",{

/***/ "./pages/tasks.tsx":
/*!*************************!*\
  !*** ./pages/tasks.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"../../node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! base-ui/src/components/Table */ \"../base-ui/src/components/Table/index.ts\");\n/* harmony import */ var _src_components_TaskComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/components/TaskComponent */ \"./src/components/TaskComponent.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n//--------------------------------------------------------with load 30-------------------------\n// import { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, TablePagination } from 'base-ui/src/components/Table';\n// import { useTodoLogic } from '../src/components/TaskComponent';\n// import React from 'react';\n// const TasksPage = () => {\n//   const { data: todos, error, isLoading, isFetching, columnNames } = useTodoLogic();\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10);\n//   // Debugging logs\n//   console.log('Column names:', columnNames);\n//   console.log('Todos data:', todos);\n//   if (isLoading) return <div>Loading...</div>;\n//   if (error) return <div>Error: {error.message}</div>;\n//   type Alignment = 'left' | 'center' | 'right' | 'justify' | 'inherit';\n//   const columns = columnNames.map((name) => {\n//     // No special formatting is applied here\n//     return {\n//       id: name, \n//       label: name.charAt(0).toUpperCase() + name.slice(1), // Capitalize the first letter for a cleaner display\n//       minWidth: 100,\n//       align: 'left' as Alignment,\n//     };\n//   });\n//   console.log('Columns generated:', columns);\n//   const handleChangePage = (event: unknown, newPage: number) => {\n//     setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setRowsPerPage(+event.target.value);\n//     setPage(0);\n//   };\n//   return (\n//     <div className=\"p-8 max-w-4xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-4\">Tasks</h1>\n//       <p className=\"text-lg mb-4\">Here is a list of your tasks:</p>\n//       <TableContainer className=\"max-h-[440px] overflow-auto\">\n//         <Table stickyHeader aria-label=\"sticky table\">\n//           <TableHead>\n//             <TableRow>\n//               {columns.map((column) => (\n//                 <TableCell\n//                   key={column.id}\n//                   align={column.align || 'left'}\n//                   className=\"sticky top-0 bg-white z-10\"\n//                   style={{ minWidth: column.minWidth }}\n//                 >\n//                   {column.label}\n//                 </TableCell>\n//               ))}\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {todos\n//               .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//               .map((todo: any, index: number) => (\n//                 <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n//                   {columns.map((column) => {\n//                     const value = todo[column.id];\n//                     return (\n//                       <TableCell key={column.id} align={column.align}>\n//                         {value !== undefined ? value.toString() : ''}\n//                       </TableCell>\n//                     );\n//                   })}\n//                 </TableRow>\n//               ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <TablePagination\n//         rowsPerPageOptions={[10, 25, 100]}\n//         component=\"div\"\n//         count={todos.length}\n//         rowsPerPage={rowsPerPage}\n//         page={page}\n//         onPageChange={handleChangePage}\n//         onRowsPerPageChange={handleChangeRowsPerPage}\n//       />\n//     </div>\n//   );\n// };\n// export default TasksPage;\n//--------------------------------------------------------with load all -------------------------\n// import { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, TablePagination } from 'base-ui/src/components/Table'; \n// import { useTodoLogic } from '../src/components/TaskComponent';\n// import React from 'react';\n// const TasksPage = () => {\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10);\n//   // Fetch data using pagination\n//   const { data: todos, total, error, isLoading, columnNames } = useTodoLogic(page, rowsPerPage);\n//   console.log(\"data: todos,\",todos)\n//   if (isLoading) return <div>Loading...</div>;\n//   if (error) return <div>Error: {error.message}</div>;\n//   const columns = columnNames.map((name) => ({\n//     id: name,\n//     label: name.charAt(0).toUpperCase() + name.slice(1),\n//     minWidth: 100,\n//     align: 'left',\n//   }));\n//   const handleChangePage = (event: unknown, newPage: number) => {\n//     setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setRowsPerPage(+event.target.value);\n//     setPage(0); // Reset to first page when rows per page changes\n//   };\n//   return (\n//     <div className=\"p-8 max-w-4xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-4\">Tasks</h1>\n//       <p className=\"text-lg mb-4\">Here is a list of your tasks:</p>\n//       <TableContainer className=\"max-h-[440px] overflow-auto\">\n//         <Table stickyHeader aria-label=\"sticky table\">\n//           <TableHead>\n//             <TableRow>\n//               {columns.map((column) => (\n//                 <TableCell\n//                   key={column.id}\n//                   align={column.align || 'left'}\n//                   className=\"sticky top-0 bg-white z-10\"\n//                   style={{ minWidth: column.minWidth }}\n//                 >\n//                   {column.label}\n//                 </TableCell>\n//               ))}\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {todos.map((todo: any, index: number) => (\n//               <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n//                 {columns.map((column) => {\n//                   const value = todo[column.id];\n//                   return (\n//                     <TableCell key={column.id} align={column.align}>\n//                       {value !== undefined ? value.toString() : ''}\n//                     </TableCell>\n//                   );\n//                 })}\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <TablePagination\n//         rowsPerPageOptions={[10, 25, 100]}\n//         component=\"div\"\n//         count={total} // Use total from API\n//         rowsPerPage={rowsPerPage}\n//         page={page}\n//         onPageChange={handleChangePage}\n//         onRowsPerPageChange={handleChangeRowsPerPage}\n//       />\n//     </div>\n//   );\n// };\n// export default TasksPage;\n//--------------------------------------------------------withload more -------------------------\n\nvar _s = $RefreshSig$();\n\n\n\nconst TasksPage = ()=>{\n    _s();\n    const [page, setPage] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(0); // Used for tracking the current page of data\n    const [rowsPerPage] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(10); // Fixed to 10 rows per load\n    const [allTodos, setAllTodos] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]); // State to hold all fetched todos\n    const [hasMore, setHasMore] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(true); // Used to track if there are more records to fetch\n    // Fetch todos for the current page\n    const { data: todos, total, error, isLoading, columnNames } = (0,_src_components_TaskComponent__WEBPACK_IMPORTED_MODULE_2__.useTodoLogic)(page, rowsPerPage);\n    // When todos are fetched, append them to allTodos\n    react__WEBPACK_IMPORTED_MODULE_3___default().useEffect(()=>{\n        if (todos && todos.length > 0) {\n            setAllTodos((prevTodos)=>[\n                    ...prevTodos,\n                    ...todos\n                ]);\n        }\n        // Check if all records are fetched\n        if (allTodos.length + todos.length >= total) {\n            setHasMore(false); // No more records to fetch\n        }\n    }, [\n        todos\n    ]);\n    if (isLoading) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: \"Loading...\"\n    }, void 0, false, {\n        fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n        lineNumber: 208,\n        columnNumber: 25\n    }, undefined);\n    if (error) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            \"Error: \",\n            error.message\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n        lineNumber: 209,\n        columnNumber: 21\n    }, undefined);\n    const columns = columnNames.map((name)=>({\n            id: name,\n            label: name.charAt(0).toUpperCase() + name.slice(1),\n            minWidth: 100,\n            align: \"left\"\n        }));\n    const handleLoadMore = ()=>{\n        setPage(page + 1); // Increase the page to load more data\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-8 max-w-4xl mx-auto\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"text-3xl font-bold mb-4\",\n                children: \"Tasks\"\n            }, void 0, false, {\n                fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                lineNumber: 224,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-lg mb-4\",\n                children: \"Here is a list of your tasks:\"\n            }, void 0, false, {\n                fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                lineNumber: 225,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.TableContainer, {\n                className: \"max-h-[440px] overflow-auto\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.Table, {\n                    stickyHeader: true,\n                    \"aria-label\": \"sticky table\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.TableHead, {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.TableRow, {\n                                children: columns.map((column)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.TableCell, {\n                                        align: column.align || \"left\",\n                                        className: \"sticky top-0 bg-white z-10\",\n                                        style: {\n                                            minWidth: column.minWidth\n                                        },\n                                        children: column.label\n                                    }, column.id, false, {\n                                        fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                                        lineNumber: 232,\n                                        columnNumber: 17\n                                    }, undefined))\n                            }, void 0, false, {\n                                fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                                lineNumber: 230,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                            lineNumber: 229,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.TableBody, {\n                            children: allTodos.map((todo, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.TableRow, {\n                                    hover: true,\n                                    role: \"checkbox\",\n                                    tabIndex: -1,\n                                    children: columns.map((column)=>{\n                                        const value = todo[column.id];\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(base_ui_src_components_Table__WEBPACK_IMPORTED_MODULE_1__.TableCell, {\n                                            align: column.align,\n                                            children: value !== undefined ? value.toString() : \"\"\n                                        }, column.id, false, {\n                                            fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                                            lineNumber: 249,\n                                            columnNumber: 21\n                                        }, undefined);\n                                    })\n                                }, index, false, {\n                                    fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                                    lineNumber: 245,\n                                    columnNumber: 15\n                                }, undefined))\n                        }, void 0, false, {\n                            fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                            lineNumber: 243,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                    lineNumber: 228,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                lineNumber: 227,\n                columnNumber: 7\n            }, undefined),\n            hasMore && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center mt-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    className: \"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\",\n                    onClick: handleLoadMore,\n                    children: \"Load More\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                    lineNumber: 263,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n                lineNumber: 262,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\job assesment\\\\assessment\\\\assessment\\\\packages\\\\todo-app\\\\pages\\\\tasks.tsx\",\n        lineNumber: 223,\n        columnNumber: 5\n    }, undefined);\n};\n_s(TasksPage, \"elADx9Qy42tnIw73xKahGyeJQYg=\", false, function() {\n    return [\n        _src_components_TaskComponent__WEBPACK_IMPORTED_MODULE_2__.useTodoLogic\n    ];\n});\n_c = TasksPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TasksPage);\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/tasks.tsx\n"));

/***/ })

});