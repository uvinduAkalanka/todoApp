"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/tasks",{

/***/ "./src/components/TaskComponent.tsx":
/*!******************************************!*\
  !*** ./src/components/TaskComponent.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTodos: function() { return /* binding */ fetchTodos; },\n/* harmony export */   useTodoLogic: function() { return /* binding */ useTodoLogic; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"../../node_modules/@tanstack/react-query/build/modern/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n//--------------------------------------------------------with all recods -------------------------\n// import { useQuery } from '@tanstack/react-query';\n// import axios from 'axios';\n// type Todo = {\n//   id: number;\n//   todo: string;\n//   completed: boolean;\n//   userId: number;\n// };\n// // Function to fetch all todos from the API (without pagination)\n// const fetchTodos = async (): Promise<Todo[]> => {\n//   const response = await axios.get('https://dummyjson.com/todos');\n//   return response.data.todos;\n// };\n// const useTodoLogic = () => {\n//   const { data, error, isLoading, isFetching } = useQuery({\n//     queryKey: ['todos'], // Query key\n//     queryFn: fetchTodos, // Fetch function\n//   });\n//   const columnNames = Array.isArray(data) && data.length > 0 ? Object.keys(data[0]) : [];\n//   return {\n//     data: data || [],\n//     error,\n//     isLoading,\n//     isFetching,\n//     columnNames,\n//   };\n// };\n// export { useTodoLogic, fetchTodos };\n//--------------------------------------------------------with total recods -------------------------\nvar _s = $RefreshSig$();\n\n\n// Function to fetch todos with pagination\nconsole.log(\"axios\");\nconst fetchTodos = async (page, limit)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://dummyjson.com/todos\", {\n        params: {\n            limit,\n            skip: page * limit\n        }\n    });\n    return {\n        todos: response.data.todos,\n        total: response.data.total\n    };\n};\nconst useTodoLogic = (page, limit)=>{\n    _s();\n    const { data, error, isLoading, isFetching } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            \"todos\",\n            page,\n            limit\n        ],\n        queryFn: ()=>fetchTodos(page, limit)\n    });\n    const columnNames = Array.isArray(data === null || data === void 0 ? void 0 : data.todos) && data.todos.length > 0 ? Object.keys(data.todos[0]) : [];\n    return {\n        data: (data === null || data === void 0 ? void 0 : data.todos) || [],\n        total: (data === null || data === void 0 ? void 0 : data.total) || 0,\n        error,\n        isLoading,\n        isFetching,\n        columnNames\n    };\n};\n_s(useTodoLogic, \"OH7FBUrOx2Ru35wnpqEzZWQRzmc=\", false, function() {\n    return [\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\n //--------------------------------------------------------withload more -------------------------\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9UYXNrQ29tcG9uZW50LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsbUdBQW1HO0FBQ25HLG9EQUFvRDtBQUNwRCw2QkFBNkI7QUFFN0IsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixrQkFBa0I7QUFDbEIsd0JBQXdCO0FBQ3hCLG9CQUFvQjtBQUNwQixLQUFLO0FBRUwsbUVBQW1FO0FBQ25FLG9EQUFvRDtBQUNwRCxxRUFBcUU7QUFDckUsZ0NBQWdDO0FBQ2hDLEtBQUs7QUFFTCwrQkFBK0I7QUFDL0IsOERBQThEO0FBQzlELHdDQUF3QztBQUN4Qyw2Q0FBNkM7QUFDN0MsUUFBUTtBQUVSLDRGQUE0RjtBQUU1RixhQUFhO0FBQ2Isd0JBQXdCO0FBQ3hCLGFBQWE7QUFDYixpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQixPQUFPO0FBQ1AsS0FBSztBQUVMLHVDQUF1QztBQUN2QyxxR0FBcUc7O0FBRXBEO0FBQ3ZCO0FBVTFCLDBDQUEwQztBQUUxQ0UsUUFBUUMsR0FBRyxDQUFDO0FBRVosTUFBTUMsYUFBYSxPQUFPQyxNQUFjQztJQUN0QyxNQUFNQyxXQUFXLE1BQU1OLGlEQUFTLENBQUMsK0JBQStCO1FBQzlEUSxRQUFRO1lBQ05IO1lBQ0FJLE1BQU1MLE9BQU9DO1FBQ2Y7SUFDRjtJQUNBLE9BQU87UUFBRUssT0FBT0osU0FBU0ssSUFBSSxDQUFDRCxLQUFLO1FBQUVFLE9BQU9OLFNBQVNLLElBQUksQ0FBQ0MsS0FBSztJQUFDO0FBQ2xFO0FBRUEsTUFBTUMsZUFBZSxDQUFDVCxNQUFjQzs7SUFDbEMsTUFBTSxFQUFFTSxJQUFJLEVBQUVHLEtBQUssRUFBRUMsU0FBUyxFQUFFQyxVQUFVLEVBQUUsR0FBR2pCLCtEQUFRQSxDQUFDO1FBQ3REa0IsVUFBVTtZQUFDO1lBQVNiO1lBQU1DO1NBQU07UUFDaENhLFNBQVMsSUFBTWYsV0FBV0MsTUFBTUM7SUFDbEM7SUFFQSxNQUFNYyxjQUFjQyxNQUFNQyxPQUFPLENBQUNWLGlCQUFBQSwyQkFBQUEsS0FBTUQsS0FBSyxLQUFLQyxLQUFLRCxLQUFLLENBQUNZLE1BQU0sR0FBRyxJQUFJQyxPQUFPQyxJQUFJLENBQUNiLEtBQUtELEtBQUssQ0FBQyxFQUFFLElBQUksRUFBRTtJQUV6RyxPQUFPO1FBQ0xDLE1BQU1BLENBQUFBLGlCQUFBQSwyQkFBQUEsS0FBTUQsS0FBSyxLQUFJLEVBQUU7UUFDdkJFLE9BQU9ELENBQUFBLGlCQUFBQSwyQkFBQUEsS0FBTUMsS0FBSyxLQUFJO1FBQ3RCRTtRQUNBQztRQUNBQztRQUNBRztJQUNGO0FBQ0Y7R0FoQk1OOztRQUMyQ2QsMkRBQVFBOzs7QUFpQnJCLENBRXBDLGlHQUFpRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9UYXNrQ29tcG9uZW50LnRzeD82NjE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS13aXRoIGFsbCByZWNvZHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBpbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XHJcbi8vIGltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcblxyXG4vLyB0eXBlIFRvZG8gPSB7XHJcbi8vICAgaWQ6IG51bWJlcjtcclxuLy8gICB0b2RvOiBzdHJpbmc7XHJcbi8vICAgY29tcGxldGVkOiBib29sZWFuO1xyXG4vLyAgIHVzZXJJZDogbnVtYmVyO1xyXG4vLyB9O1xyXG5cclxuLy8gLy8gRnVuY3Rpb24gdG8gZmV0Y2ggYWxsIHRvZG9zIGZyb20gdGhlIEFQSSAod2l0aG91dCBwYWdpbmF0aW9uKVxyXG4vLyBjb25zdCBmZXRjaFRvZG9zID0gYXN5bmMgKCk6IFByb21pc2U8VG9kb1tdPiA9PiB7XHJcbi8vICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vZHVtbXlqc29uLmNvbS90b2RvcycpO1xyXG4vLyAgIHJldHVybiByZXNwb25zZS5kYXRhLnRvZG9zO1xyXG4vLyB9O1xyXG5cclxuLy8gY29uc3QgdXNlVG9kb0xvZ2ljID0gKCkgPT4ge1xyXG4vLyAgIGNvbnN0IHsgZGF0YSwgZXJyb3IsIGlzTG9hZGluZywgaXNGZXRjaGluZyB9ID0gdXNlUXVlcnkoe1xyXG4vLyAgICAgcXVlcnlLZXk6IFsndG9kb3MnXSwgLy8gUXVlcnkga2V5XHJcbi8vICAgICBxdWVyeUZuOiBmZXRjaFRvZG9zLCAvLyBGZXRjaCBmdW5jdGlvblxyXG4vLyAgIH0pO1xyXG5cclxuLy8gICBjb25zdCBjb2x1bW5OYW1lcyA9IEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZGF0YS5sZW5ndGggPiAwID8gT2JqZWN0LmtleXMoZGF0YVswXSkgOiBbXTtcclxuXHJcbi8vICAgcmV0dXJuIHtcclxuLy8gICAgIGRhdGE6IGRhdGEgfHwgW10sXHJcbi8vICAgICBlcnJvcixcclxuLy8gICAgIGlzTG9hZGluZyxcclxuLy8gICAgIGlzRmV0Y2hpbmcsXHJcbi8vICAgICBjb2x1bW5OYW1lcyxcclxuLy8gICB9O1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IHsgdXNlVG9kb0xvZ2ljLCBmZXRjaFRvZG9zIH07XHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS13aXRoIHRvdGFsIHJlY29kcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XHJcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcblxyXG5cclxudHlwZSBUb2RvID0ge1xyXG4gIGlkOiBudW1iZXI7XHJcbiAgdG9kbzogc3RyaW5nO1xyXG4gIGNvbXBsZXRlZDogYm9vbGVhbjtcclxuICB1c2VySWQ6IG51bWJlcjtcclxufTtcclxuXHJcbi8vIEZ1bmN0aW9uIHRvIGZldGNoIHRvZG9zIHdpdGggcGFnaW5hdGlvblxyXG5cclxuY29uc29sZS5sb2coXCJheGlvc1wiKTtcclxuXHJcbmNvbnN0IGZldGNoVG9kb3MgPSBhc3luYyAocGFnZTogbnVtYmVyLCBsaW1pdDogbnVtYmVyKTogUHJvbWlzZTx7IHRvZG9zOiBUb2RvW107IHRvdGFsOiBudW1iZXIgfT4gPT4ge1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL2R1bW15anNvbi5jb20vdG9kb3MnLCB7XHJcbiAgICBwYXJhbXM6IHtcclxuICAgICAgbGltaXQsXHJcbiAgICAgIHNraXA6IHBhZ2UgKiBsaW1pdCxcclxuICAgIH0sXHJcbiAgfSk7XHJcbiAgcmV0dXJuIHsgdG9kb3M6IHJlc3BvbnNlLmRhdGEudG9kb3MsIHRvdGFsOiByZXNwb25zZS5kYXRhLnRvdGFsIH07XHJcbn07XHJcblxyXG5jb25zdCB1c2VUb2RvTG9naWMgPSAocGFnZTogbnVtYmVyLCBsaW1pdDogbnVtYmVyKSA9PiB7XHJcbiAgY29uc3QgeyBkYXRhLCBlcnJvciwgaXNMb2FkaW5nLCBpc0ZldGNoaW5nIH0gPSB1c2VRdWVyeSh7XHJcbiAgICBxdWVyeUtleTogWyd0b2RvcycsIHBhZ2UsIGxpbWl0XSwgLy8gQWRkIHBhZ2UgYW5kIGxpbWl0IHRvIHRoZSBxdWVyeSBrZXlcclxuICAgIHF1ZXJ5Rm46ICgpID0+IGZldGNoVG9kb3MocGFnZSwgbGltaXQpLCAvLyBGZXRjaCB3aXRoIHBhZ2luYXRpb25cclxuICB9KTtcclxuXHJcbiAgY29uc3QgY29sdW1uTmFtZXMgPSBBcnJheS5pc0FycmF5KGRhdGE/LnRvZG9zKSAmJiBkYXRhLnRvZG9zLmxlbmd0aCA+IDAgPyBPYmplY3Qua2V5cyhkYXRhLnRvZG9zWzBdKSA6IFtdO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgZGF0YTogZGF0YT8udG9kb3MgfHwgW10sXHJcbiAgICB0b3RhbDogZGF0YT8udG90YWwgfHwgMCwgLy8gUmV0dXJuIHRoZSB0b3RhbCBudW1iZXIgb2YgaXRlbXNcclxuICAgIGVycm9yLFxyXG4gICAgaXNMb2FkaW5nLFxyXG4gICAgaXNGZXRjaGluZyxcclxuICAgIGNvbHVtbk5hbWVzLFxyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgeyB1c2VUb2RvTG9naWMsIGZldGNoVG9kb3MgfTtcclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS13aXRobG9hZCBtb3JlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbInVzZVF1ZXJ5IiwiYXhpb3MiLCJjb25zb2xlIiwibG9nIiwiZmV0Y2hUb2RvcyIsInBhZ2UiLCJsaW1pdCIsInJlc3BvbnNlIiwiZ2V0IiwicGFyYW1zIiwic2tpcCIsInRvZG9zIiwiZGF0YSIsInRvdGFsIiwidXNlVG9kb0xvZ2ljIiwiZXJyb3IiLCJpc0xvYWRpbmciLCJpc0ZldGNoaW5nIiwicXVlcnlLZXkiLCJxdWVyeUZuIiwiY29sdW1uTmFtZXMiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJPYmplY3QiLCJrZXlzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/TaskComponent.tsx\n"));

/***/ })

});